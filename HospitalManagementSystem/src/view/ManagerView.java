/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ExaminationService;
import controller.ListPatientService;
import controller.PatientService;
import daojdbcconn.JdbcConn;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Examination;
import model.Patient;
import model.ListPatient;

/**
 *
 * @author user
 */
public class ManagerView extends javax.swing.JFrame {

    /**
     * Creates new form ManagerView
     */
    public ManagerView() {
        initComponents();
        getList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPatientTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        input_PatientName = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        input_PatientGender = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        input_PatientDOB = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        input_PatientAddress = new javax.swing.JTextPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        input_PatientPhoneNumber = new javax.swing.JTextPane();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        input_PatientId = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        searchInfoPatient = new javax.swing.JTextPane();
        btnSearchPatient = new javax.swing.JButton();
        btnShowPatient = new javax.swing.JButton();
        btnPatientInsert = new javax.swing.JButton();
        btnPatientDelete = new javax.swing.JButton();
        btnPatientUpdate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        input_ExaminationDoctorId = new javax.swing.JTextPane();
        jScrollPane11 = new javax.swing.JScrollPane();
        input_ExaminationTreatment = new javax.swing.JTextPane();
        jScrollPane12 = new javax.swing.JScrollPane();
        input_ExaminationDiagnosis = new javax.swing.JTextPane();
        jScrollPane15 = new javax.swing.JScrollPane();
        input_ExaminationExamId = new javax.swing.JTextPane();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        input_ExaminationPatientId = new javax.swing.JTextPane();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        input_ExaminationDepartmentId = new javax.swing.JTextPane();
        jScrollPane17 = new javax.swing.JScrollPane();
        input_ExaminationExamDate = new javax.swing.JTextPane();
        btnExaminationInsert = new javax.swing.JButton();
        btnExaminationDelete = new javax.swing.JButton();
        btnExaminationUpdate = new javax.swing.JButton();
        btnExaminationClear = new javax.swing.JButton();
        btnShow1 = new javax.swing.JButton();
        btnSearchExamination = new javax.swing.JButton();
        jScrollPane18 = new javax.swing.JScrollPane();
        searchInfoExamination = new javax.swing.JTextPane();
        jLabel20 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        examinationTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        btnPatientClear = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenu3.setText("jMenu3");

        jMenu4.setText("File");
        jMenuBar1.add(jMenu4);

        jMenu5.setText("Edit");
        jMenuBar1.add(jMenu5);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("aaaaa");

        listPatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "患者名", "性別", "検査日", "所属科室", "担当医師", "診断", "治療"
            }
        ));
        listPatientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPatientTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listPatientTable);

        jLabel2.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel2.setText("患者名");

        jLabel3.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel3.setText("性別");

        jLabel4.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel4.setText("生年月日");

        jLabel5.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel5.setText("住所");

        jScrollPane2.setViewportView(input_PatientName);

        jScrollPane3.setViewportView(input_PatientGender);

        jScrollPane4.setViewportView(input_PatientDOB);

        jScrollPane5.setViewportView(input_PatientAddress);

        jScrollPane9.setViewportView(input_PatientPhoneNumber);

        jLabel10.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel10.setText("電話番号");

        jLabel11.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel11.setText("患者ID");

        jScrollPane10.setViewportView(input_PatientId);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane10)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4))))
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(0, 0, 0))
        );

        jLabel1.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        jLabel1.setText("患者名リスク");

        jLabel6.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        jLabel6.setText("患者名の情報");

        jLabel9.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel9.setText("患者名");

        jScrollPane8.setViewportView(searchInfoPatient);

        btnSearchPatient.setFont(new java.awt.Font("MS UI Gothic", 1, 10)); // NOI18N
        btnSearchPatient.setText("検索");
        btnSearchPatient.setPreferredSize(new java.awt.Dimension(70, 21));
        btnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPatientActionPerformed(evt);
            }
        });

        btnShowPatient.setFont(new java.awt.Font("MS UI Gothic", 1, 10)); // NOI18N
        btnShowPatient.setText("一覧");
        btnShowPatient.setPreferredSize(new java.awt.Dimension(70, 21));
        btnShowPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowPatientActionPerformed(evt);
            }
        });

        btnPatientInsert.setText("新規");
        btnPatientInsert.setPreferredSize(new java.awt.Dimension(58, 21));
        btnPatientInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientInsertActionPerformed(evt);
            }
        });

        btnPatientDelete.setText("削除");
        btnPatientDelete.setPreferredSize(new java.awt.Dimension(58, 21));
        btnPatientDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientDeleteActionPerformed(evt);
            }
        });

        btnPatientUpdate.setText("変更");
        btnPatientUpdate.setPreferredSize(new java.awt.Dimension(58, 21));
        btnPatientUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientUpdateActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel13.setText("検査ID");

        jLabel17.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel17.setText("治療");

        jScrollPane13.setViewportView(input_ExaminationDoctorId);

        jScrollPane11.setViewportView(input_ExaminationTreatment);

        jScrollPane12.setViewportView(input_ExaminationDiagnosis);

        jScrollPane15.setViewportView(input_ExaminationExamId);

        jLabel16.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel16.setText("診断");

        jScrollPane14.setViewportView(input_ExaminationPatientId);

        jLabel14.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel14.setText("患者ID");

        jLabel15.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel15.setText("医師ID");

        jLabel18.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel18.setText("所属科ID");

        jLabel19.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel19.setText("検査日");

        jScrollPane16.setViewportView(input_ExaminationDepartmentId);

        jScrollPane17.setViewportView(input_ExaminationExamDate);

        btnExaminationInsert.setText("新規");
        btnExaminationInsert.setPreferredSize(new java.awt.Dimension(58, 21));
        btnExaminationInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExaminationInsertActionPerformed(evt);
            }
        });

        btnExaminationDelete.setText("削除");
        btnExaminationDelete.setPreferredSize(new java.awt.Dimension(58, 21));
        btnExaminationDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExaminationDeleteActionPerformed(evt);
            }
        });

        btnExaminationUpdate.setText("変更");
        btnExaminationUpdate.setPreferredSize(new java.awt.Dimension(58, 21));
        btnExaminationUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExaminationUpdateActionPerformed(evt);
            }
        });

        btnExaminationClear.setText("X");
        btnExaminationClear.setPreferredSize(new java.awt.Dimension(58, 21));
        btnExaminationClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExaminationClearActionPerformed(evt);
            }
        });

        btnShow1.setFont(new java.awt.Font("MS UI Gothic", 1, 10)); // NOI18N
        btnShow1.setText("一覧");
        btnShow1.setPreferredSize(new java.awt.Dimension(70, 21));
        btnShow1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShow1ActionPerformed(evt);
            }
        });

        btnSearchExamination.setFont(new java.awt.Font("MS UI Gothic", 1, 10)); // NOI18N
        btnSearchExamination.setText("検索");
        btnSearchExamination.setPreferredSize(new java.awt.Dimension(70, 21));
        btnSearchExamination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchExaminationActionPerformed(evt);
            }
        });

        jScrollPane18.setViewportView(searchInfoExamination);

        jLabel20.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel20.setText("検査ID");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                                    .addComponent(jScrollPane12)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnExaminationInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnExaminationDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(btnExaminationUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnExaminationClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSearchExamination, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnShow1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 350, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel13)
                                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel16))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel17)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.CENTER, jPanel2Layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.CENTER)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel18)))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel19)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExaminationInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExaminationDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExaminationUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExaminationClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel20)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchExamination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel12.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        jLabel12.setText("検査の情報");

        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "患者 ID", "患者名", "性别", "生年月日", "住所", "電話番号"
            }
        ));
        patientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(patientTable);

        examinationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "検査ID", "患者ID", "医師ID", "所属科室ID", "検査日", "診断", "治療"
            }
        ));
        examinationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                examinationTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(examinationTable);

        jLabel7.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        jLabel7.setText("検査名リスク");

        btnPatientClear.setText("X");
        btnPatientClear.setPreferredSize(new java.awt.Dimension(58, 21));
        btnPatientClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientClearActionPerformed(evt);
            }
        });

        jMenu6.setText("File");
        jMenu6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu6ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Doctor");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem1);

        jMenuBar2.add(jMenu6);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnPatientInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnPatientDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnPatientUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnPatientClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(283, 283, 283)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnShowPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel9)
                                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(392, 502, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPatientUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(btnPatientClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPatientInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(btnPatientDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(42, 42, 42)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnShowPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPatientUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientUpdateActionPerformed
        // TODO add your handling code here:
        try {
            int row = patientTable.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) patientTable.getModel();

            input_PatientId.setEditable(false);

            String patientId = input_PatientId.getText();
            String patientName = input_PatientName.getText();
            String patientGender = input_PatientGender.getText();
            String patientDOB = input_PatientDOB.getText();
            String patientAddress = input_PatientAddress.getText();
            String patientPhoneNumber = input_PatientPhoneNumber.getText();

            int IdNo = Integer.parseInt(patientId);

            Patient ptn = new Patient();
            PatientService patientService = new PatientService();

            ptn.setId(IdNo);
            ptn.setName(patientName);
            ptn.setGender(patientGender);
            ptn.setDateOfBirth(patientDOB);
            ptn.setAddress(patientAddress);
            ptn.setPhoneNumber(patientPhoneNumber);

            int response = JOptionPane.showConfirmDialog(null, "変更確認お願いします。 ", "変更", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                try {
                    patientService.updatePatient(ptn);
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Update Error!");
                }
            }
            getPatient();
            getList();
        } catch (NumberFormatException e) {
        }
    }//GEN-LAST:event_btnPatientUpdateActionPerformed

    private void jMenu6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu6ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        new DoctorView().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPatientActionPerformed
        try {
            searchPatient();
        } catch (SQLException ex) {
            Logger.getLogger(ManagerView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchPatientActionPerformed

    private void btnPatientDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientDeleteActionPerformed
        // TODO add your handling code here:
        int row = patientTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();

        Patient patient = new Patient();
        patient.setId((int) model.getValueAt(row, 0));

        PatientService patientService = new PatientService();
        int response = JOptionPane.showConfirmDialog(null, "削除確認よろしでしょうか。 ", "削除", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            try {
                patientService.deletePatient(patient);
            } catch (SQLException ex) {
            }
        }
        getPatient();
        getList();
    }//GEN-LAST:event_btnPatientDeleteActionPerformed

    private void btnShowPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowPatientActionPerformed
        // TODO add your handling code here:
        getPatient();
    }//GEN-LAST:event_btnShowPatientActionPerformed

    private void btnPatientInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientInsertActionPerformed
        // TODO add your handling code here:
        String insertedId = input_PatientId.getText();
        String insertedName = input_PatientName.getText();
        String insertedGender = input_PatientGender.getText();
        String insertedDOB = input_PatientDOB.getText();
        String insertedAddress = input_PatientAddress.getText();
        String insertedPhoneNumber = input_PatientPhoneNumber.getText();

        int IdNo = Integer.parseInt(insertedId);

        Patient ptn = new Patient();
        PatientService patientService = new PatientService();
        ptn.setId(IdNo);
        ptn.setName(insertedName);
        ptn.setGender(insertedGender);
        ptn.setDateOfBirth(insertedDOB);
        ptn.setAddress(insertedAddress);
        ptn.setPhoneNumber(insertedPhoneNumber);

        int response = JOptionPane.showConfirmDialog(null, "登録確認よろしでしょうか。 ", "登録", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            try {
                patientService.insertPatient(ptn);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Insert Error!");
            }
        }
        getPatient();
        getList();
    }//GEN-LAST:event_btnPatientInsertActionPerformed

    private void listPatientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPatientTableMouseClicked

    }//GEN-LAST:event_listPatientTableMouseClicked

    private void btnSearchExaminationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchExaminationActionPerformed
        // TODO add your handling code here:
        searchExamination();
    }//GEN-LAST:event_btnSearchExaminationActionPerformed

    private void btnShow1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShow1ActionPerformed
        // TODO add your handling code here:
        getExamination();
    }//GEN-LAST:event_btnShow1ActionPerformed

    private void btnExaminationUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExaminationUpdateActionPerformed
        // TODO add your handling code here:
        try {
            int row = examinationTable.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) examinationTable.getModel();

            input_ExaminationExamId.setEditable(false);

            String examId = input_ExaminationExamId.getText();
            String examinationPatientId = input_ExaminationPatientId.getText();
            String examinationDoctorId = input_ExaminationDoctorId.getText();
            String examinationDepartmentId = input_ExaminationDepartmentId.getText();
            String examinationExamDate = input_ExaminationExamDate.getText();
            String examinationDiagnosis = input_ExaminationDiagnosis.getText();
            String examinationTreatment = input_ExaminationTreatment.getText();

            int examIdNo = Integer.parseInt(examId);
            int examinationPatientIdNo = Integer.parseInt(examinationPatientId);
            int examinationDoctorIdNo = Integer.parseInt(examinationDoctorId);
            int examinationDepartmentIdNo = Integer.parseInt(examinationDepartmentId);

            Examination exam = new Examination();
            ExaminationService examinationService = new ExaminationService();

            exam.setId(examIdNo);
            exam.setPatientId(examinationPatientIdNo);
            exam.setDoctorId(examinationDoctorIdNo);
            exam.setDepartmentId(examinationDepartmentIdNo);
            exam.setExamDate(examinationExamDate);
            exam.setDiagnosis(examinationDiagnosis);
            exam.setTreatment(examinationTreatment);

            int response = JOptionPane.showConfirmDialog(null, "変更確認お願いします。 ", "変更", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                try {
                    examinationService.updateExamination(exam);
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Update Error!");
                }
            }
            getExamination();
            getList();
        } catch (NumberFormatException e) {
        }
    }//GEN-LAST:event_btnExaminationUpdateActionPerformed

    private void btnExaminationDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExaminationDeleteActionPerformed
        // TODO add your handling code here:
        int row = examinationTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) examinationTable.getModel();

        Examination exam = new Examination();
        exam.setId((int) model.getValueAt(row, 0));

        ExaminationService examService = new ExaminationService();

        int response = JOptionPane.showConfirmDialog(null, "削除確認お願いします。 ", "削除", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            try {
                examService.deleteExamination(exam);
            } catch (SQLException ex) {
            }
        }
        getExamination();
        getList();
    }//GEN-LAST:event_btnExaminationDeleteActionPerformed

    private void btnExaminationInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExaminationInsertActionPerformed
        // TODO add your handling code here:
        String examId = input_ExaminationExamId.getText();
        String patientId = input_ExaminationPatientId.getText();
        String doctorId = input_ExaminationDoctorId.getText();
        String departmentId = input_ExaminationDepartmentId.getText();
        String examDate = input_ExaminationExamDate.getText();
        String treatment = input_ExaminationTreatment.getText();
        String diagnosis = input_ExaminationDiagnosis.getText();

        int examIdNo = Integer.parseInt(examId);
        int patientIdNo = Integer.parseInt(patientId);
        int doctorIdNo = Integer.parseInt(doctorId);
        int departmentIdNo = Integer.parseInt(departmentId);

        Examination exam = new Examination();
        ExaminationService examinationService = new ExaminationService();

        exam.setId(examIdNo);
        exam.setPatientId(patientIdNo);
        exam.setDoctorId(doctorIdNo);
        exam.setDepartmentId(departmentIdNo);
        exam.setExamDate(examDate);
        exam.setDiagnosis(diagnosis);
        exam.setTreatment(treatment);

        int response = JOptionPane.showConfirmDialog(null, "新規登録確認お願いします。 ", "登録", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            try {
                examinationService.insertExamination(exam);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Insert Error!");
            }
        }
        getExamination();
        getList();
    }//GEN-LAST:event_btnExaminationInsertActionPerformed

    private void patientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientTableMouseClicked
        // TODO add your handling code here:
        int row = patientTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();

        input_PatientId.setEditable(false);

        input_PatientId.setText(model.getValueAt(row, 0).toString());
        input_PatientName.setText(model.getValueAt(row, 1).toString());
        input_PatientGender.setText(model.getValueAt(row, 2).toString());
        input_PatientDOB.setText(model.getValueAt(row, 3).toString());
        input_PatientAddress.setText(model.getValueAt(row, 4).toString());
        input_PatientPhoneNumber.setText(model.getValueAt(row, 5).toString());
    }//GEN-LAST:event_patientTableMouseClicked

    private void examinationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examinationTableMouseClicked
        // TODO add your handling code here:
        int row = examinationTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) examinationTable.getModel();

        input_ExaminationExamId.setEditable(false);

        input_ExaminationExamId.setText(model.getValueAt(row, 0).toString());
        input_ExaminationPatientId.setText(model.getValueAt(row, 1).toString());
        input_ExaminationDoctorId.setText(model.getValueAt(row, 2).toString());
        input_ExaminationDepartmentId.setText(model.getValueAt(row, 3).toString());
        input_ExaminationExamDate.setText(model.getValueAt(row, 4).toString());
        input_ExaminationDiagnosis.setText(model.getValueAt(row, 5).toString());
        input_ExaminationTreatment.setText(model.getValueAt(row, 6).toString());
    }//GEN-LAST:event_examinationTableMouseClicked

    private void btnPatientClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientClearActionPerformed
        // TODO add your handling code here:
        patientClear();
    }//GEN-LAST:event_btnPatientClearActionPerformed

    private void btnExaminationClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExaminationClearActionPerformed
        // TODO add your handling code here:
        examinationClear();
    }//GEN-LAST:event_btnExaminationClearActionPerformed

    // SHOW
    public void getList() {
        ListPatientService patient = new ListPatientService();
        List<ListPatient> listInfo = patient.selectAll();
        DefaultTableModel df = (DefaultTableModel) listPatientTable.getModel();
        df.setRowCount(0);
        listInfo.forEach((p) -> {
            df.addRow(new Object[]{p.getId(), p.getName(), p.getGender(), p.getExamDate(), p.getDepartmentName(), p.getDoctorName(), p.getDiagnosis(), p.getTreatment()});
        });
    }

    public void getExamination() {
        ExaminationService exam = new ExaminationService();
        List<Examination> examinationInfo = exam.selectAll();
        DefaultTableModel df = (DefaultTableModel) examinationTable.getModel();
        df.setRowCount(0);
        examinationInfo.forEach((p) -> {
            df.addRow(new Object[]{p.getId(), p.getPatientId(), p.getDoctorId(), p.getDepartmentId(), p.getExamDate(), p.getDiagnosis(), p.getTreatment()});
        });
    }

    public void getPatient() {
        PatientService patient = new PatientService();
        List<Patient> patientInfo = patient.selectAll();
        DefaultTableModel df = (DefaultTableModel) patientTable.getModel();
        df.setRowCount(0);
        patientInfo.forEach((p) -> {
            df.addRow(new Object[]{p.getId(), p.getName(), p.getGender(), p.getDateOfBirth(), p.getAddress(), p.getPhoneNumber()});
        });
    }

    // SEARCH 
    public void searchExamination() {
        String keyword = searchInfoExamination.getText();
        ExaminationService exam = new ExaminationService();
        List<Examination> searchExamination = exam.searchExamination(keyword);
        DefaultTableModel df = (DefaultTableModel) examinationTable.getModel();
        df.setRowCount(0);
        searchExamination.forEach((p) -> {
            df.addRow(new Object[]{p.getId(), p.getPatientId(), p.getDoctorId(), p.getDepartmentId(), p.getExamDate(), p.getDiagnosis(), p.getTreatment()});
        });
    }

    public void searchPatient() throws SQLException {
        String keyword = searchInfoPatient.getText();
        PatientService patient = new PatientService();
        List<Patient> searchPatient = patient.searchPatient(keyword);
        DefaultTableModel df = (DefaultTableModel) patientTable.getModel();
        df.setRowCount(0);
        searchPatient.forEach((p) -> {
            df.addRow(new Object[]{p.getId(), p.getName(), p.getGender(), p.getDateOfBirth(), p.getAddress(), p.getPhoneNumber()});
        });
    }

    // CLEAR
    public void patientClear() {
        input_PatientId.setEditable(true);
        input_PatientId.setText("");
        input_PatientName.setText("");
        input_PatientGender.setText("");
        input_PatientDOB.setText("");
        input_PatientAddress.setText("");
        input_PatientPhoneNumber.setText("");
    }

    public void examinationClear() {
        input_ExaminationExamId.setEditable(true);
        input_ExaminationExamId.setText("");
        input_ExaminationPatientId.setText("");
        input_ExaminationDoctorId.setText("");
        input_ExaminationDepartmentId.setText("");
        input_ExaminationExamDate.setText("");
        input_ExaminationTreatment.setText("");
        input_ExaminationDiagnosis.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExaminationClear;
    private javax.swing.JButton btnExaminationDelete;
    private javax.swing.JButton btnExaminationInsert;
    private javax.swing.JButton btnExaminationUpdate;
    private javax.swing.JButton btnPatientClear;
    private javax.swing.JButton btnPatientDelete;
    private javax.swing.JButton btnPatientInsert;
    private javax.swing.JButton btnPatientUpdate;
    private javax.swing.JButton btnSearchExamination;
    private javax.swing.JButton btnSearchPatient;
    private javax.swing.JButton btnShow1;
    private javax.swing.JButton btnShowPatient;
    private javax.swing.JTable examinationTable;
    private javax.swing.JTextPane input_ExaminationDepartmentId;
    private javax.swing.JTextPane input_ExaminationDiagnosis;
    private javax.swing.JTextPane input_ExaminationDoctorId;
    private javax.swing.JTextPane input_ExaminationExamDate;
    private javax.swing.JTextPane input_ExaminationExamId;
    private javax.swing.JTextPane input_ExaminationPatientId;
    private javax.swing.JTextPane input_ExaminationTreatment;
    private javax.swing.JTextPane input_PatientAddress;
    private javax.swing.JTextPane input_PatientDOB;
    private javax.swing.JTextPane input_PatientGender;
    private javax.swing.JTextPane input_PatientId;
    private javax.swing.JTextPane input_PatientName;
    private javax.swing.JTextPane input_PatientPhoneNumber;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable listPatientTable;
    private javax.swing.JTable patientTable;
    private javax.swing.JTextPane searchInfoExamination;
    private javax.swing.JTextPane searchInfoPatient;
    // End of variables declaration//GEN-END:variables
}
